openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://127.0.0.1:8080
  description: Generated server url
paths:
  /storage/experiment/{experimentId}:
    get:
      tags:
      - storage-controller
      operationId: getExperiment
      parameters:
      - name: experimentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExperimentWrapper'
    delete:
      tags:
      - storage-controller
      operationId: deleteExperiment
      parameters:
      - name: experimentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /storage/kpi/{kpiId}:
    get:
      tags:
      - storage-controller
      operationId: getKpi
      parameters:
      - name: kpiId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiWrapper'
    delete:
      tags:
      - storage-controller
      operationId: deleteKpi
      parameters:
      - name: kpiId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /storage/metric/{metricId}:
    get:
      tags:
      - storage-controller
      operationId: getMetric
      parameters:
      - name: metricId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MetricWrapper'
    delete:
      tags:
      - storage-controller
      operationId: deleteMetric
      parameters:
      - name: metricId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /storage/kpi:
    post:
      tags:
      - storage-controller
      operationId: createKpi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KpiWrapper'
        required: true
      responses:
        "200":
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /storage/metric:
    post:
      tags:
      - storage-controller
      operationId: createMetric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricWrapper'
        required: true
      responses:
        "200":
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /storage/experiment:
    post:
      tags:
      - storage-controller
      operationId: createExperiment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentWrapper'
        required: true
      responses:
        "200":
          description: default response
          content:
            '*/*':
              schema:
                type: string
  /portal/dcs/dashboard/{experimentId}:
    get:
      tags:
      - dcs-controller
      operationId: getDashboard
      parameters:
      - name: experimentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DashboardWrapper'
  /portal/dcs/dashboard:
    post:
      tags:
      - dcs-controller
      operationId: createDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DcsRequestWrapper'
        required: true
      responses:
        "200":
          description: default response
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
      - dcs-controller
      operationId: deleteDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DcsRequestWrapper'
        required: true
      responses:
        "200":
          description: default response
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    ExperimentWrapper:
      type: object
      properties:
        expId:
          type: string
        useCase:
          type: string
        siteFacility:
          type: string
        kpis:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/KpiWrapper'
        metrics:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/MetricWrapper'
    KpiWrapper:
      type: object
      properties:
        topic:
          type: string
        kpiId:
          type: string
        name:
          type: string
        unit:
          type: string
        interval:
          type: number
          format: double
        graph:
          type: string
          enum:
          - line
          - pie
          - metric
          - gauge
        dashboardUrl:
          type: string
        expId:
          type: string
    MetricWrapper:
      type: object
      properties:
        topic:
          type: string
        metricId:
          type: string
        type:
          type: string
          enum:
          - APPLICATION_METRIC
          - INFRASTRUCTURE_METRIC
        name:
          type: string
        metricCollectionType:
          type: string
        unit:
          type: string
        interval:
          type: number
          format: double
        graph:
          type: string
          enum:
          - line
          - pie
          - metric
          - gauge
        dashboardUrl:
          type: string
        expId:
          type: string
    DashboardWrapper:
      type: object
      properties:
        urls:
          type: array
          items:
            $ref: '#/components/schemas/UrlWrapper'
    UrlWrapper:
      type: object
      properties:
        url:
          type: string
    ContextWrapper:
      type: object
      properties:
        metricId:
          type: string
        metricCollectionType:
          type: string
        kpiId:
          type: string
        graph:
          type: string
        name:
          type: string
        unit:
          type: string
        interval:
          type: string
    DcsRequestWrapper:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/RecordWrapper'
    RecordWrapper:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/ValueWrapper'
    ValueWrapper:
      type: object
      properties:
        topic:
          type: string
        expId:
          type: string
        action:
          type: string
        context:
          $ref: '#/components/schemas/ContextWrapper'
